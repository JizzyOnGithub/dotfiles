(include "/home/jizzy/.config/eww/2nd.yuck")
(defwindow topbar
           :monitor 1
           :geometry (geometry :x "0"
                               :y "0"
                               :width "100%"
                               :height "30px"
                               :anchor "top center")
           :stacking "fg"
           :reserve (struts :distance "30px" :side "top")
           :windowtype "dock"
           :wm-ignore false
 (centerbox :class "bar"
 	(left)
 	(middle)
 	(right)))

(defwidget seperator []
    (label :text " " :class "seperator"))

; /** Left **/ ;
(defpoll gpu :interval "1s" "nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits | awk '{print $1}'")
(defpoll gputemp :interval "3s" "nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader")
(defpoll cputemp :interval "3s" "sensors | grep 'Core 0' | awk '{print $3}' | tr -d '+°C' | cut -d. -f1")
(defwidget left []
    (box :space-evenly false :class "left"
        (box :space-evenly false 
            (label :text "CPU" :class "cpu")
            (label :text "${EWW_TEMPS.CORETEMP_CORE_0}°C")
            (label :text "${round(EWW_CPU.avg, 0)}%" :class "cpuavg" :yalign "0.25"))
        (seperator)
        (box :space-evenly false
            (box :space-evenly false 
                (label :text "GPU" :class "gpu")
                (label :text "${gputemp}°C")
                (label :text "${gpu}%" :class "gpuavg" :yalign "0.25"))
        (seperator)
        (box :space-evenly false
            (box :space-evenly false 
                (label :text "MEM" :class "mem")
                (label :text "${round(EWW_RAM.used_mem / 1073741824, 1)}/32GB"))))))

; /** Mid **/ ;
(deflisten cava :initial "____________________" "/home/jizzy/.config/eww/scripts/cava.sh")
(deflisten title :initial "nothing" "playerctl metadata xesam:title -F")
(defwidget middle []
    (overlay
    	(label :text cava :valign "end" :class "player")
    	(label :text title :class "title" :truncate true :limit-width "20")))

; /** Right **/ ;
(defpoll time :interval "1s" "date +'%A %d, %R:%S'")
(defwidget right []
    (box :space-evenly false :halign "end" :class "time"
        (systray :orientation "h"
                 :space-evenly true
                 :prepend-new true)
        (seperator)
        (label :text time)))
